drop view if exists "public"."event_ratings";

create table "public"."proposals" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid not null,
    "event_id" uuid,
    "event_instance_id" uuid,
    "text" text,
    "votes" json,
    "resolved" boolean not null default false
);


alter table "public"."proposals" enable row level security;

alter table "public"."events" drop column "organizer_ids";

alter table "public"."events" add column "organizer_id" uuid;

CREATE UNIQUE INDEX proposals_pkey ON public.proposals USING btree (id);

alter table "public"."proposals" add constraint "proposals_pkey" PRIMARY KEY using index "proposals_pkey";

alter table "public"."events" add constraint "events_organizer_id_fkey" FOREIGN KEY (organizer_id) REFERENCES auth.users(id) not valid;

alter table "public"."events" validate constraint "events_organizer_id_fkey";

alter table "public"."proposals" add constraint "proposals_event_id_fkey" FOREIGN KEY (event_id) REFERENCES events(event_id) not valid;

alter table "public"."proposals" validate constraint "proposals_event_id_fkey";

alter table "public"."proposals" add constraint "proposals_event_instance_id_fkey" FOREIGN KEY (event_instance_id) REFERENCES event_instances(instance_id) not valid;

alter table "public"."proposals" validate constraint "proposals_event_instance_id_fkey";

alter table "public"."proposals" add constraint "proposals_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."proposals" validate constraint "proposals_user_id_fkey";

create or replace view "public"."event_ratings" as  SELECT e.event_id,
    COALESCE(avg(r.rating), (0)::numeric) AS average_rating,
    count(r.rating) AS rating_count
   FROM ((events e
     LEFT JOIN event_instances i ON ((e.event_id = i.event_id)))
     LEFT JOIN instance_ratings r ON ((i.instance_id = r.instance_id)))
  GROUP BY e.event_id;


grant delete on table "public"."proposals" to "anon";

grant insert on table "public"."proposals" to "anon";

grant references on table "public"."proposals" to "anon";

grant select on table "public"."proposals" to "anon";

grant trigger on table "public"."proposals" to "anon";

grant truncate on table "public"."proposals" to "anon";

grant update on table "public"."proposals" to "anon";

grant delete on table "public"."proposals" to "authenticated";

grant insert on table "public"."proposals" to "authenticated";

grant references on table "public"."proposals" to "authenticated";

grant select on table "public"."proposals" to "authenticated";

grant trigger on table "public"."proposals" to "authenticated";

grant truncate on table "public"."proposals" to "authenticated";

grant update on table "public"."proposals" to "authenticated";

grant delete on table "public"."proposals" to "service_role";

grant insert on table "public"."proposals" to "service_role";

grant references on table "public"."proposals" to "service_role";

grant select on table "public"."proposals" to "service_role";

grant trigger on table "public"."proposals" to "service_role";

grant truncate on table "public"."proposals" to "service_role";

grant update on table "public"."proposals" to "service_role";


